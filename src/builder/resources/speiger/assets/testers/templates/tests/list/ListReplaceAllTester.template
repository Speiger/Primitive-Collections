package speiger.src.testers.PACKAGE.tests.list;

import org.junit.Ignore;

#ignore
import static com.google.common.collect.testing.features.CollectionSize.ZERO;
import static com.google.common.collect.testing.features.ListFeature.SUPPORTS_SET;
#endignore

import java.util.Arrays;
#if TYPE_OBJECT
import java.util.Objects;
#endif

import com.google.common.collect.testing.features.CollectionSize;
import com.google.common.collect.testing.features.ListFeature;

import speiger.src.testers.PACKAGE.tests.base.ABSTRACT_LIST_TESTER;

@Ignore
@SuppressWarnings("javadoc")
public class FILE_KEY_TYPEListReplaceAllTester KEY_GENERIC_TYPE extends ABSTRACT_LIST_TESTER KEY_GENERIC_TYPE
{
#ignore
	@ListFeature.Require(SUPPORTS_SET)
#endignore
	public void testReplaceAll() {
#if TYPE_OBJECT
		getList().replaceAll(e -> samples.e3());
#else
		getList().REPLACE(e -> samples.e3());
#endif
		KEY_TYPE[] array = NEW_KEY_ARRAY(getNumElements());
		Arrays.fill(array, samples.e3());
		expectContents(array);
	}

#ignore
	@ListFeature.Require(SUPPORTS_SET)
#endignore
	public void testReplaceAll_changesSome() {
#if TYPE_OBJECT
		getList().replaceAll(e -> Objects.equals(e, samples.e0()) ? samples.e3() : e);
#else
		getList().REPLACE(e -> e == samples.e0() ? samples.e3() : e);
#endif
		KEY_TYPE[] expected = createSamplesArray();
		for (int i = 0; i < expected.length; i++) {
			if (KEY_EQUALS(expected[i], samples.e0())) {
				expected[i] = samples.e3();
			}
		}
		expectContents(expected);
	}

#ignore
	@CollectionSize.Require(absent = ZERO)
	@ListFeature.Require(absent = SUPPORTS_SET)
#endignore
	public void testReplaceAll_unsupported() {
		try {
#if TYPE_OBJECT
			getList().replaceAll(e -> e);
#else
			getList().REPLACE(e -> e);
#endif
			fail("replaceAll() should throw UnsupportedOperationException");
		} catch (UnsupportedOperationException expected) {
		}
		expectUnchanged();
	}
}
